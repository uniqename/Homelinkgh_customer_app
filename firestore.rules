rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin';
    }
    
    function isProvider() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'provider';
    }
    
    // Users collection
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      allow read: if isAdmin();
      allow create: if isAuthenticated() && isOwner(userId);
    }
    
    // Providers collection
    match /providers/{providerId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(providerId) || isAdmin();
      allow create: if isAuthenticated() && isOwner(providerId);
    }
    
    // Bookings collection
    match /bookings/{bookingId} {
      allow read, write: if isAuthenticated() && 
        (resource.data.customerId == request.auth.uid || 
         resource.data.providerId == request.auth.uid ||
         isAdmin());
      allow create: if isAuthenticated();
    }
    
    // Earnings collection - Provider and Admin access
    match /earnings/{earningId} {
      allow read: if isAuthenticated() && 
        (resource.data.providerId == request.auth.uid || isAdmin());
      allow write: if isAdmin();
      allow create: if isAdmin();
    }
    
    // Payouts collection - Provider can read own, Admin can write
    match /payouts/{payoutId} {
      allow read: if isAuthenticated() && 
        (resource.data.providerId == request.auth.uid || isAdmin());
      allow write: if isAdmin();
      allow create: if isProvider() && resource.data.providerId == request.auth.uid;
    }
    
    // Admin Paychecks - Admin only
    match /admin_paychecks/{paycheckId} {
      allow read, write: if isAdmin();
    }
    
    // Referrals collection
    match /referrals/{referralId} {
      allow read: if isAuthenticated() && 
        (resource.data.referrerId == request.auth.uid || 
         resource.data.refereeId == request.auth.uid ||
         isAdmin());
      allow write: if isAuthenticated();
      allow create: if isAuthenticated();
    }
    
    // Soft Launch Metrics - Read only for users, write for system
    match /soft_launch/{metricId} {
      allow read: if isAdmin();
      allow write: if isAuthenticated();
      allow create: if isAuthenticated();
    }
    
    // Service Ratings
    match /service_ratings/{ratingId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
        resource.data.customerId == request.auth.uid;
      allow create: if isAuthenticated();
    }
    
    // System collections (admin only)
    match /system/{document=**} {
      allow read, write: if isAdmin();
    }
    
    // Analytics (admin read only)
    match /analytics/{document=**} {
      allow read: if isAdmin();
      allow write: if false; // Only backend can write
    }
  }
}